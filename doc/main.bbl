\providecommand{\noopsort}[1]{}
\begin{thebibliography}{27}
\providecommand{\natexlab}[1]{#1}
\providecommand{\url}[1]{\texttt{#1}}
\expandafter\ifx\csname urlstyle\endcsname\relax
  \providecommand{\doi}[1]{doi: #1}\else
  \providecommand{\doi}{doi: \begingroup \urlstyle{rm}\Url}\fi

\bibitem[{Agda developers}(2013)]{agda-relnotes-228}
{Agda developers}.
\newblock Agda release notes, regarding reflection.
\newblock The Agda Wiki:
  \url{http://wiki.portal.chalmers.se/agda/agda.php?n=Main.Version-2-2-8} and
  \url{http://wiki.portal.chalmers.se/agda/agda.php?n=Main.Version-2-3-0},
  2013.
\newblock [Online; accessed 9-Feb-2013].

\bibitem[Allais(2010)]{allais}
Guillaume Allais.
\newblock Proof automatization using reflection (implementations in {Agda}).
\newblock MSc Intern report, University of Nottingham, 2010.

\bibitem[Brady(2013)]{idris}
Edwin Brady.
\newblock Idris, a general-purpose dependently typed programming language:
  Design and implementation.
\newblock \emph{Journal of Functional Programming}, 23:\penalty0 552--593, 9
  2013.
\newblock \doi{10.1017/S095679681300018X}.

\bibitem[Brady et~al.(2004)Brady, McBride, and McKinna]{brady-opt}
Edwin Brady, Conor McBride, and James McKinna.
\newblock Inductive families need not store their indices.
\newblock In \emph{Types for Proofs and Programs}, pages 115--129. Springer,
  2004.

\bibitem[Braibant(2012)]{brabaint}
Thomas Braibant.
\newblock Emancipate yourself from {Ltac}.
\newblock Available online
  \url{http://gallium.inria.fr/blog/your-first-coq-plugin/}, 2012.

\bibitem[Chapman(2009)]{james-phd}
James Chapman.
\newblock \emph{Type checking and normalisation}.
\newblock PhD thesis, University of Nottingham, 2009.

\bibitem[Chlipala(2013)]{chlipala}
Adam Chlipala.
\newblock \emph{Certified programming with dependent types}.
\newblock MIT Press, 2013.

\bibitem[Danielsson(2006)]{nisse}
Nils~Anders Danielsson.
\newblock A formalisation of a dependently typed language as an
  inductive-recursive family.
\newblock In \emph{Types for Proofs and Programs}, volume 4502 of \emph{Lecture
  Notes in Computer Science}. Spring Verlag, 2006.

\bibitem[development team(2004)]{coq}
The~Coq development team.
\newblock The {Coq} proof assistant reference manual.
\newblock Logical Project, 2004.

\bibitem[Devriese and Piessens(2011)]{instance-args}
Dominique Devriese and Frank Piessens.
\newblock On the bright side of type classes: Instance arguments in {Agda}.
\newblock In \emph{Proceedings of the 16th ACM SIGPLAN International Conference
  on Functional Programming}, ICFP '11, pages 143--155. ACM, 2011.
\newblock \doi{10.1145/2034773.2034796}.

\bibitem[Devriese and Piessens(2013)]{devriese}
Dominique Devriese and Frank Piessens.
\newblock Typed syntactic meta-programming.
\newblock In \emph{Proceedings of the 2013 ACM SIGPLAN International Conference
  on Functional Programming (ICFP 2013)}. ACM, September 2013.
\newblock \doi{10.1145/2500365.2500575}.

\bibitem[Gordon and Melham(1993)]{hol}
M.J.C Gordon and T.F. Melham.
\newblock \emph{Introduction to HOL: a theorem proving environment for higher
  order logic}.
\newblock Cambridge University Press, 1993.

\bibitem[Lindblad and Benke(2004)]{lindblad}
Fredrik Lindblad and Marcin Benke.
\newblock A tool for automated theorem proving in {Agda}.
\newblock In \emph{Proceedings of the 2004 International Conference on Types
  for Proofs and Programs}, pages 154--169. Springer-Verlag, 2004.

\bibitem[Martin-L{\"o}f(1985)]{martin-lof}
Per Martin-L{\"o}f.
\newblock Constructive mathematics and computer programming.
\newblock In \emph{Proceedings of a discussion meeting of the Royal Society of
  London on Mathematical logic and programming languages}, pages 167--184.
  Prentice-Hall, Inc., 1985.

\bibitem[McBride(2003)]{unification}
Conor McBride.
\newblock First-order unification by structural recursion.
\newblock \emph{Journal of Functional Programming}, 13:\penalty0 1061--1075, 11
  2003.
\newblock ISSN 1469-7653.
\newblock \doi{10.1017/S0956796803004957}.
\newblock URL \url{http://journals.cambridge.org/article_S0956796803004957}.

\bibitem[McBride(2010)]{kipling}
Conor McBride.
\newblock Outrageous but meaningful coincidences: Dependent type-safe syntax
  and evaluation.
\newblock In \emph{Proceedings of the 6th ACM SIGPLAN Workshop on Generic
  Programming}, WGP '10, pages 1--12, New York, NY, USA, 2010. ACM.
\newblock \doi{10.1145/1863495.1863497}.

\bibitem[Norell(2007)]{agda}
Ulf Norell.
\newblock \emph{Towards a practical programming language based on dependent
  type theory}.
\newblock PhD thesis, Department of Computer Science and Engineering, Chalmers
  University of Technology, 2007.

\bibitem[Norell(2009)]{ulf-tphols}
Ulf Norell.
\newblock Playing with {Agda}.
\newblock Invited talk at TPHOLS, 2009.

\bibitem[Peyton~Jones(2003)]{haskell-report}
Simon Peyton~Jones, editor.
\newblock \emph{Haskell 98 language and libraries: the revised report}.
\newblock Cambridge University Press, 2003.

\bibitem[Pitman(1980)]{lisp-macros}
Kent~M. Pitman.
\newblock Special forms in {Lisp}.
\newblock In \emph{Proceedings of the 1980 {ACM} conference on {LISP} and
  functional programming}, pages 179--187. ACM, 1980.

\bibitem[Sheard and {Peyton Jones}(2002)]{template-haskell}
Tim Sheard and Simon {Peyton Jones}.
\newblock Template meta-programming for {Haskell}.
\newblock In \emph{{Proceedings of the 2002 ACM SIGPLAN workshop on Haskell}},
  pages 1--16, 2002.
\newblock \doi{10.1145/581690.581691}.

\bibitem[Sozeau and Oury(2008)]{coq-type-classes}
Matthieu Sozeau and Nicolas Oury.
\newblock First-class type classes.
\newblock In \emph{Theorem Proving in Higher Order Logics}, pages 278--293.
  Springer, 2008.

\bibitem[Stutterheim et~al.(2013)Stutterheim, Swierstra, and
  Swierstra]{stutterheim}
Jurri\"en Stutterheim, Wouter Swierstra, and Doaitse Swierstra.
\newblock Forty hours of declarative programming: Teaching {Prolog} at the
  {Junior College Utrecht}.
\newblock In \emph{Proceedings First International Workshop on Trends in
  Functional Programming in Education, University of St. Andrews, Scotland, UK,
  11th June 2012}, volume 106 of \emph{Electronic Proceedings in Theoretical
  Computer Science}, pages 50--62, 2013.

\bibitem[Taha and Sheard(1997)]{metaml}
Walid Taha and Tim Sheard.
\newblock Multi-stage programming with explicit annotations.
\newblock In \emph{{Proceedings of the 1997 ACM SIGPLAN symposium on Partial
  evaluation and semantics-based program manipulation}}, PEPM '97, 1997.
\newblock \doi{10.1145/258993.259019}.

\bibitem[van~der Walt and Swierstra(2013)]{van-der-walt}
Paul van~der Walt and Wouter Swierstra.
\newblock Engineering proof by reflection in {Agda}.
\newblock In Ralf Hinze, editor, \emph{Implementation and Application of
  Functional Languages}, Lecture Notes in Computer Science, pages 157--173.
  Springer Berlin Heidelberg, 2013.
\newblock ISBN 978-3-642-41581-4.
\newblock \doi{10.1007/978-3-642-41582-1_10}.

\bibitem[{\noopsort{Walt}}{van der Walt}(2012)]{vdWalt:Thesis:2012}
Paul {\noopsort{Walt}}{van der Walt}.
\newblock {Reflection in Agda}.
\newblock Master's thesis, Department of Computer Science, Utrecht University,
  Utrecht, The Netherlands, 2012.
\newblock Available online,
  \url{http://igitur-archive.library.uu.nl/student-theses/2012-1030-200720/UUindex.html}.

\bibitem[Ziliani et~al.(2013)Ziliani, Dreyer, Krishnaswami, Nanevski, and
  Vafeiadis]{mtac}
Beta Ziliani, Derek Dreyer, Neelakantan~R. Krishnaswami, Aleksandar Nanevski,
  and Viktor Vafeiadis.
\newblock Mtac: A monad for typed tactic programming in coq.
\newblock In \emph{Proceedings of the 18th ACM SIGPLAN International Conference
  on Functional Programming}, ICFP '13, pages 87--100, 2013.
\newblock \doi{10.1145/2500365.2500579}.

\end{thebibliography}
